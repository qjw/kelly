package store

import (
	"github.com/qjw/kelly"
)

const (
	defaultRegistryKey = "_registrys"
)

func newInt(v int) *int {
	return &v
}
func newBool(v bool) *bool {
	return &v
}

type sessionImp struct {
	// The ID of the session, generated by stores. It should not be used for
	// user data.
	ID string

	name string

	c *kelly.Context

	store   Store
	written bool

	// Values contains the user-data for the session.
	Values  map[interface{}]interface{}
	Options *Options
	IsNew   bool
}

type Registry struct {
	c        *kelly.Context
	sessions map[string]sessionImp
}

func getRegistry(c *kelly.Context) *Registry {
	registry := c.Get(defaultRegistryKey)
	if registry != nil {
		return registry.(*Registry)
	}
	newRegistry := &Registry{
		c:        c,
		sessions: make(map[string]sessionImp),
	}
	c.Set(defaultRegistryKey, newRegistry)
	return newRegistry
}
